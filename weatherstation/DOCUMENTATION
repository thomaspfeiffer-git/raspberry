Weatherstation.py
(c) https://github.com/thomaspfeiffer-git 2016

english documentation will follow


Die Wetterstation liest aus einer Queue mit Polling die Messwerte
verschiedener ueber Wohnung und Garten verteilter Sensoren und zeigt
diese auf drei Screens (Wechsel durch Touch auf das Display) an.



Queue fuer die Messwerte:
-------------------------

Die Messwerte der Sensoren verschiedener Raspberry Pis in der Wohnung 
bzw im Garten werden ueber eine Queue uebertragen. QueueServer.py ist
der Server fuer diese Queue. Die zugehoerigen Klassen fuer das Lesen
bzw Schreiben der Queue bzw fuer den Messwerte sind in 
../libs/SensorQueue.py und ../libs/SensorValue.py.

Die Sensoren in ../libs/sensors/ erhalten eine Instanz von SensorValue
und aktualisieren dessen Werte, die dann ueber die Queue uebertragen 
werden.


Wetterstation:
--------------

In Weatherstation.py werden die Daten via Polling von der Queue gelesen
und an die Screens weitergegeben. Die drei Screens fuer Wohnzimmer-, 
Kinderzimmer- und Aussenwerte werden in Screens.py gezeichnet (Texte,
Linien etc). Zum Zeichnen selbst wird Display.py verwendet, das das
Tontec Display initialisiert und pygame für die Anzeige verwendet.

Drueckt man auf das Touchdisplay, wird auf den naechsten Screen weiter-
geschaltet. Nach rund zehn Sekunden wird automatisch wieder Screen #1
mit den Hauptmesswerten angezeigt.

Die Helligkeitsregelung erfolgt via PWM in Lightness.py. Derzeit wird
das Display einfach zwischen 22:00 Uhr und 6:00 abgedunkelt. Ich moechte
spaeter einen LDR zur variablen Helligkeitsregelung verwenden.


Files:
  QueueServer.py:    Starts a server for queueing various sensor values
                     of all Rasperry Pis in our flat or garden.
  Weatherstation.py: main program; polls data from the queue and displays
                     them on the Tontec Display.
  Screens.py:        provides three different screens for the sensor values
                     of living room, kid's room, and outside.
  Display.py:        class for drawing text and lines on the display
  Constants.py:      some constants used in this project
  Config.py:         configuration stuff (*not* for the queue)
  Lightness.py:      control of lightness


Bauteilliste:

- Raspberry Pi2
- Tontec 3.5 Zoll Raspberry Pi Touch Screen Display Monitor 480x320 
  mit transparentem Gehäuse 
  http://www.amazon.de/Tontec%C2%AE-Raspberry-Display-Touchscreen-transparentem/dp/B00OFLKPG4




